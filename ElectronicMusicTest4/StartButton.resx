<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SPne/wNaJW9NaFxaeQAAAABJRU5ErkJggg==
</value>
  </data>
</root>